name: Docker nach AZ-Registry

on:
  push:
    tags: ["v*.*.*"]

env:
  imageName: "track-dev-ops"
  containerName: "azure-container-test"
  resourceGroupName: "trackdev-Exp05"
  locationName: "germanywestcentral"
  tagName: ""

jobs:
  build:  
    name: Build container image
    runs-on: ubuntu-latest

    outputs:
       tagName: ${{ steps.tag.outputs.tag }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1             
      - name: Setup Go
        uses: actions/setup-go@v5.3.0
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
          go-version: 1.22        
      - name: Install dependencies
        run: |
          cd ./azureContainerTest
          go get .          
      - name: Build Go Project
        run: |
          cd ./azureContainerTest
          go build -v ./...
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: azure-test-binary
          path: ./azureContainerTest/azureContainerTest

  publish:
    needs: build
    name: Publish container image
    runs-on: ubuntu-latest
    steps:
      - name: Dowload artifact
        uses: actions/download-artifact@v4
        with:
          name: azure-test-binary
          path: ./azureContainerTest/
          
      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./azureContainerTest/Dockerfile
          build-args: |
            version=${{ steps.tag.outputs.tag }}
          tags: ${{ secrets.ACR_ENDPOINT }}/${{ env.imageName }}:${{ needs.build.outputs.tagName }}

  deploy:
    needs: [publish, build]
    name: Deploy container image
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: Azure/login@v2.1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Set this value to true to enable Azure PowerShell Login in addition to Azure CLI login
          enable-AzPSSession: true
 
      - name: Create a new resource group in Azure
        uses: Azure/powershell@v2
        with:
            # Specify the Az PowerShell script here.
            inlineScript: New-AzResourceGroup -Name ${{ env.resourceGroupName }} -location ${{ env.locationName }} -Force
            # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
            azPSVersion: latest

      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          location: ${{ env.locationName }}
          ingress: "external"
          targetPort: 31415
          acrName: ${{ secrets.ACR_NAME }}
          acrUsername: ${{ secrets.ACR_USERNAME }}
          acrPassword: ${{ secrets.ACR_PASSWORD }}
          imageToDeploy: ${{ secrets.ACR_ENDPOINT }}/${{ env.imageName }}:${{ needs.build.outputs.tagName }}
          resourceGroup: ${{ env.resourceGroupName }}
          containerAppName: ${{ env.containerName }}



          
